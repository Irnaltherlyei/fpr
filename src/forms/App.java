package forms;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import management.*;

public class App {
    private JButton refreshButton;
    private JPanel mainPanel;
    private JList dataList;
    private JButton addButton;
    private JButton descendingButton;
    private JButton ascendingButton;
    private JButton deleteButton;
    private JButton paidHighestButton;
    private JButton paidLowestButton;
    private JButton managerButton;

    public Management management;

    public App() {
        management = new Management();
        dataList.setListData(management.personalList.toArray());

        refreshButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dataList.setListData(management.personalList.toArray());
            }
        });
        addButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new AddForm(management);
            }
        });
        descendingButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                management.personalList.sort((x, y) -> x.compareTo(y));
                dataList.setListData(management.personalList.toArray());
            }
        });
        ascendingButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                management.personalList.sort((x, y) -> y.compareTo(x));
                dataList.setListData(management.personalList.toArray());
            }
        });
        deleteButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                List list = dataList.getSelectedValuesList();
                for (Object s : list) {
                    management.removeEmployee(s);
                }
                dataList.setListData(management.personalList.toArray());
            }
        });
        paidHighestButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                DefaultListModel model = new DefaultListModel();
                model.addElement(management.getHighestPaid());
                dataList.setModel(model);
            }
        });
        paidLowestButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                DefaultListModel model = new DefaultListModel();
                model.addElement(management.getLowestPaid());
                dataList.setModel(model);
            }
        });
        managerButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                DefaultListModel model = new DefaultListModel();
                Pair p = management.getHighestLowestManager();
                model.addElement("Highest paid Manager:");
                model.addElement(p.getFirst());
                model.addElement("Lowest paid Manager:");
                model.addElement(p.getSecond());
                dataList.setModel(model);
            }
        });
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("App");
        frame.setContentPane(new App().mainPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        dataList = new JList();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(dataList, gbc);
        refreshButton = new JButton();
        refreshButton.setText("Refresh");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(refreshButton, gbc);
        addButton = new JButton();
        addButton.setText("Add");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(addButton, gbc);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(panel1, gbc);
        descendingButton = new JButton();
        descendingButton.setText("Descending");
        panel1.add(descendingButton);
        ascendingButton = new JButton();
        ascendingButton.setText("Ascending");
        panel1.add(ascendingButton);
        paidHighestButton = new JButton();
        paidHighestButton.setText("Paid highest");
        panel1.add(paidHighestButton);
        paidLowestButton = new JButton();
        paidLowestButton.setText("Paid lowest");
        panel1.add(paidLowestButton);
        managerButton = new JButton();
        managerButton.setText("Manager");
        managerButton.setToolTipText("Get highest and lowest paid Managers");
        panel1.add(managerButton);
        deleteButton = new JButton();
        deleteButton.setText("Delete");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(deleteButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
